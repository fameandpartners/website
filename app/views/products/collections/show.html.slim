ruby:
  init_collection_filter = "
    filter = new ProductCollectionFilter({
      controls: '.category .category-controls',
      content: '.category .products-collection',
      page_size: 20,
      size: #{ @collection.products.size.to_i },
      total_products: #{ @collection.total_products.to_i },
      details_elements: {
        banner: {
          title: '.page-title.category-header .page-title--details h1',
          description: '.page-title.category-header .page-title--details p',
          image: '.page-title.category-header'
        }
      }
    });
  "
  init_product_collection_moodboard_links = "
    initProductCollectionMoodboardLinks({
      container: '.category .products-collection',
      buttons:   'span.moodboard'
    });"

= content_for :inline_javascript do
  = raw init_collection_filter
  = raw init_product_collection_moodboard_links

ruby:
  style_options = options_from_collection_for_select(@filter.styles, :permalink, :name, @collection.style.try(:permalink))
  shape_options = options_from_collection_for_select(@filter.shapes, :to_s, :to_s, @collection.bodyshape.try(:downcase))
  color_options = color_options_for_select_from_options_values(@filter.colors, @collection.color.try(:name))
  sort_options = options_from_collection_for_select(@filter.sort_orders, :first, :second, @collection.order.try(:downcase))

.page-title.default.category-header style="background-image: url('#{@collection.details.banner.image}')"
  .container
    .page-title--details
      h1.no-padding-bottom = @collection.details.banner.title
      p = @collection.details.banner.description

.page-content.products-collections.category
  .container.relative.category-controls
    .row.relative
      .col-md-3.hidden-sm.hidden-xs.hidden-xxs
        = select_tag :style, style_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Styles'
        br
      .col-md-3.hidden-sm.hidden-xs.hidden-xxs
        = select_tag :bodyshape, shape_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Shape'
        br
      .col-md-3.hidden-sm.hidden-xs.hidden-xxs
        = select_tag :color, color_options, class: 'pink-select', prompt: 'Colour'
        br
      .col-md-3.col-xs-12.col-xxs-12.product-order
        = select_tag 'product_order', sort_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Sort By'
        br

  /! somewhat complex rendering logic - also have to copy this in js templates
  - products = @collection.products.first(6)
  .container.relative.products-collection
    /! First Row - [][][][] First four products
    .row.relative
      = render partial: 'product', collection: products.shift(4), as: :product
      .clearfix.visible-sm-block.visible-xs-block

    /! Second row - [][][ XX ]
    .row.relative
      = render partial: 'product', collection: products.shift(2), as: :product
      .col-md-6.col-xs-12.col-xxs-12
        .content
          p = @collection.details.description
      .clearfix.visible-sm-block.visible-xs-block

    /! Rest rows
    - @collection.products.drop(6).each_slice(4) do |products|
      - if products.size == 4
        /! [][][][]
        .row.relative
          = render partial: 'product', collection: products, as: :product
        .clearfix.visible-sm-block.visible-xs-block
      - else
        /! footer - one or two row [ X X ][][]
        - products.each_slice(2) do |footer_products|
          .row.relative
            .col-md-6.col-xs-12.col-xxs-12
              .content
                h2 = @collection.details.title
                p = @collection.details.footer
            = render partial: 'product', collection: footer_products, as: :product
            .clearfix.visible-sm-block.visible-xs-block

    - if @collection.total_products > @collection.products.size
      .row.relative.more-products
        = link_to 'More dresses', '#', class: 'btn btn-black', data: { action: 'show-more-collection-products' }
