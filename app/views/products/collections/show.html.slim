= content_for :inline_javascript do
  | filter = new ProductCollectionFilter('.category .category-controls', '.category .container.relative');

ruby:
  style_options = options_from_collection_for_select(@filter.styles, :permalink, :name, @collection.style.try(:permalink))
  event_options = options_from_collection_for_select(@filter.events, :permalink, :name, @collection.event.try(:permalink))
  shape_options = options_from_collection_for_select(@filter.shapes, :to_s, :to_s, @collection.bodyshape.try(:downcase))
  color_options = color_options_for_select_from_options_values(@filter.colors, @collection.color.try(:name))
  sort_options = options_from_collection_for_select(@filter.sort_orders, :first, :second, @collection.order.try(:downcase))

.page-title
  .container
    .page-title--details
      h1.no-padding-bottom = @collection.banner.title
      p.lead = @collection.banner.description

.category.page-content
  /! Controls
  .category-controls.container
    .row
      /! First Row Controls
      .col-md-8.no-padding.hidden-sm.hidden-xs
        .row
          .col-md-3
            = select_tag :style, style_options, class: 'cs-select cs-skin-border', prompt: 'Styles'
            br
          .col-md-3
            = select_tag :event, event_options, class: 'cs-select cs-skin-border', prompt: 'Events'
            br

          .col-md-3
            = select_tag :bodyshape, shape_options, class: 'cs-select cs-skin-border', prompt: 'Shape'
            br

          .col-md-3
            = select_tag :color, color_options, class: 'cs-select cs-skin-border', prompt: 'Colour'
            br

      /! Second Row Controls
      .col-md-3.col-md-offset-1
        .row
          = select_tag 'product_order', sort_options, class: 'cs-select cs-skin-border', prompt: 'Sort By...'
          br

  .container.relative
    - @collection.products.each_slice(4) do |products|
      .row
        - products.each_with_index do |product, index|
          .col-md-3.col-sm-6.col-xs-12.category--item
            = link_to collection_product_path(product) do
              = image_tag product.image, alt: product.name, class: 'img-responsive'
            .details
              span.name = product.name
              span.price = product.price
          - if index == 1 # i like this markup
            .clearfix.visible-sm-block
