= content_for :inline_javascript do
  | filter = new ProductCollectionFilter('.category .category-controls', '.category .products-collection');

ruby:
  style_options = options_from_collection_for_select(@filter.styles, :permalink, :name, @collection.style.try(:permalink))
  shape_options = options_from_collection_for_select(@filter.shapes, :to_s, :to_s, @collection.bodyshape.try(:downcase))
  color_options = color_options_for_select_from_options_values(@filter.colors, @collection.color.try(:name))
  sort_options = options_from_collection_for_select(@filter.sort_orders, :first, :second, @collection.order.try(:downcase))

.page-title.default.category-header
  .container
    .page-title--details
      h1.no-padding-bottom = @collection.details.banner.title
      p = @collection.details.banner.description

.page-content.products-collections.category
  .container.relative.category-controls
    .row.relative
      .col-md-3.hidden-xs.hidden-xxs
        = select_tag :style, style_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Styles'
        br
      .col-md-3.hidden-xs.hidden-xxs
        = select_tag :bodyshape, shape_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Shape'
        br
      .col-md-3.hidden-xs.hidden-xxs
        = select_tag :color, color_options, class: 'pink-select', prompt: 'Colour'
        br
      .col-md-3.col-xs-12.col-xxs-12.product-order
        = select_tag 'product_order', sort_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Sort By'
        br

  .container.relative.products-collection
    /! First Row - First four products
    =render :partial => 'products_four', :locals => { :products => @collection.products.slice(0, 4) }

    /! Second Row - Next two products
    =render :partial => 'products_two_left', :locals => { :products => @collection.products.slice(3, 2), :title => 'Title', :content => @collection.details.description}
    
    /! The rest of the products
    - @collection.products.drop(6).each_slice(4) do |products|
      = render :partial => 'products_four', :locals => { :products => products }

