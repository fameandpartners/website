= render :partial => '/pages/robots'

- if local_assigns[:hidden].blank?
  ruby:
    sort_options = options_from_collection_for_select(@filter.sort_orders, :first, :second, @collection.order.try(:downcase))

= render :partial => 'javascript'

/ for Optimizely Best Sellers - A/B...
- if request.env['PATH_INFO'].include? 'best-sellers'
  = render partial: 'js_optimizely'

- if banner.display?
  .category-header
    .media-wrap
      img src='#{banner.image}'
    .outer-wrap
      .inner-wrap
        h1.title
          span.js-heading = raw(params[:lpt] || page.heading)

.page-content.products-collections
  .hidden-md.hidden-lg
    = render :partial => 'sidebar_mobile'

  .container
    .FilterSort__mobileTrigger.hidden-md.hidden-lg.js-optimizely-control
      .row
        .col-xs-12
          div.js-trigger-filter-mobile.FilterSort__mobileTriggerBtn.FilterSort__border href="javacsript:;"
            .js-product-collection-filter

      .row
        .col-xs-12
          div.js-trigger-sort-mobile.FilterSort__mobileTriggerBtn.FilterSort__final href="javacsript:;"
            .js-product-collection-sort
              .FilterSort__summary

    .row
      = render :partial => 'breadcrumb'
      = render :partial => 'sort'
      .col-lg-3.col-md-4.side-panel.hidden-sm.hidden-xs.js-optimizely-control
        = render :partial => 'sidebar'

      .col-lg-12.products-collection.hidden.js-optimizely-test
        .row.products-set.js-products-collection-wrap
          = render partial: 'best_sellers_test'

      .col-lg-9.col-md-8.products-collection.js-optimizely-control#js-fb-optimizely-control
        .row.products-set.js-products-collection-wrap
          = render partial: 'products_with_content', locals: {col: 3}
          - if request.path.include?("/dresses/plus-size")
            .col-md-12
              .panel-message
                h2.heading These dresses are also available for killer curves up to size 22
          = render partial: 'pagination'
