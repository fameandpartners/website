- if local_assigns[:hidden].blank?
  ruby:
    show_all_style = OpenStruct.new(:name => "SHOW ALL")
    show_all_color = OpenStruct.new(:name => "SHOW ALL",:presentation => "SHOW ALL")
    @filter.styles.push(show_all_style)
    @filter.shapes.push("SHOW ALL")
    @filter.colors.push(show_all_color)

    style_options = options_from_collection_for_select(@filter.styles, :permalink, :name, @collection.style.try(:permalink))
    shape_options = options_from_collection_for_select(@filter.shapes, :to_s, :humanize, @collection.bodyshape.try(:downcase))
    color_options = color_options_for_select_from_options_values(@filter.colors, @collection.color.try(:name))
    sort_options = options_from_collection_for_select(@filter.sort_orders, :first, :second, @collection.order.try(:downcase))

  .container.relative.category-controls
    .row.relative
      .col-md-3.hidden-sm.hidden-xs.hidden-xxs
        = select_tag :style, style_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Styles'
        br
      .col-md-3.hidden-sm.hidden-xs.hidden-xxs
        = select_tag :bodyshape, shape_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Shape'
        br
      .col-md-3.hidden-sm.hidden-xs.hidden-xxs
        = select_tag :color, color_options, class: 'pink-select', prompt: t(:color)
        br
      .col-md-3.col-xs-12.col-xxs-12.product-order
        = select_tag 'product_order', sort_options, "data-minimum-results-for-search" => 'Infinity', prompt: 'Sort By'
        br
