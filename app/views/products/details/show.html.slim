ruby:
  url_params    = params.except(:controller, :action, :product_slug)
  product_paths = { default: collection_product_path(@product, url_params) }

  @product.default_color_options.each do |color|
    product_paths[color.id] = collection_product_path(@product, url_params.merge(color: color.name))
  end

  init_product_details_page = "
      page.initProductDetailsPage({
        product_paths: #{ product_paths.to_json },
        selector: {
          product_id: #{ @product.id },
          custom_id: #{ @product.master_id },
          variants: #{raw @product.available_options.variants.serialize.to_json },
          container: '.product-section--selection',
          size_input: {
            container: '#product-size-content',
            action: '#product-size-action'
          },
          color_input: {
            container:  '#product-color-content',
            action:     '#product-colorize-action',
            value:      '#{raw @product.color_id}'
          },
          customization_input: {
            container:  '#product-customizations-content',
            action:     '#product-customize-action'
          },
          making_options_input: {
            container:  '#product-making-options-content',
            action:     '#product-making-options-action',
            value:      '#{ raw @product.making_option_id }'
          },
          height_input: {
            container: '#product-height-content',
            action:    '#product-height-action',
            required:  #{Features.active?(:height_customisation) && @product.height_customisable?}
          }
        },
        moodboard_links: {
          container: '.dress-more.container.page-content',
          buttons: '.add-to-moodboard'
        },
        buyButton: '.buy-button',
        wishlistButton: '#add-to-moodboard',
        fitguideButton: '#fit-guide',
        fitguideContainer: '#fit-guide-content'
      });
  "

  init_product_details_page_new = "
    window.ProductDetails = window.ProductDetails || {};
    window.ProductDetails.colorOptions = #{ @product.default_color_options.to_json };
    window.ProductDetails.productImages = #{ @product.all_images.to_json };
    window.ProductDetails.selectedColor = #{ @product.color_id };
  "

= content_for :inline_javascript_top do
  = raw init_product_details_page_new

= content_for :inline_javascript do
  = raw init_product_details_page

= content_for :head
  - @product.cropped_images.each_with_index do |image, index|
    = tag :meta, name: "crop_image_#{index}", content: image.original

  - if params[:color]
    = tag :meta, name: 'robots', content: 'noindex, follow'

- if Features.active?(:marketing_modals)
  #modal-add-to-cart-template.hidden

.product-selection-wrap
  .hero-product-wrap
    = react_component('HeroProductCarousel')

  /! Product Section
  .product-selector
    .outer-wrap
      .inner-wrap
        .row
          .col-md-12.title
            h1.heading = @product.name
            - if @product.name.downcase.include?('skirt')
              p
                | (Skirt Only)
            p#product-price
              span.price = product_price_with_discount(@product.price, @product.discount)
          .col-md-12
            .icon-wrap
              .icon-fit
                .copy Guaranteed to fit
              .icon-eyedrop
                .copy Customize how you want
              .icon-delivery-express
                .copy Free, on time delivery
              .icon-parcel_returns
                .copy Return for free*
          - if @product.is_active || custom_order?
            = render 'product_selection_options'
          - else
            = render 'inactive_product_selection'

/! About The Dress
.dress-about.container.page-content
  - if @product.name.downcase.include?('skirt')
      h2.text-center About The Skirt
  - else
    h2.text-center About The Dress

  .divider
  .row
    .col-md-6.col-sm-12.hidden-xs
      h4 The Story
      div=raw @product.description

      h4 Dress Inspiration
      .inspiration
        .box.col-sm-4.no-padding
          - if @product.song
            = image_tag @product.song.image_url, class: 'img-responsive'

        .box.col-sm-4.no-padding
          - if @product.celebrity && @product.celebrity.image_url
            = image_tag @product.celebrity.image_url, class: 'img-responsive'

        - @product.inspiration.each do |item|
          .box.col-sm-4.no-padding
            = image_tag(item.image_url, :class => 'img-responsive')

        p Images courtesy of Google

    .col-md-6.col-sm-12
      - if @product.fit.present?
        h4 About our #famebabe
        = simple_format(@product.fit)

      - if @product.size.present?
        = simple_format(@product.size)

      - if @product.preorder.present?
        .pre-order
          strong Pre-order
          | This item will ship within 4 weeks

      - if @product.style_notes.present?
        h4 Style it with
        = simple_format(@product.style_notes)

      - if @product.fabric.present?
        h4 Fabric & Trims
        = simple_format(@product.fabric)
        | Product may have variations in dying hues so product may look slightly different from image

      h4 Care Instructions
      p
        | Professional dry-clean only
        br
        | See garment care label for further details on how to care for your garment

      p.sku SKU: #{@product.sku}

      /h4 Share
      /p= render :partial => 'share_buttons', :locals => { product: @product }

hr

= render partial: 'related_products', locals: { product: @product }

= render partial: 'micro_data'

#fit-guide-content.hidden
  = render :partial => 'size_guide', :locals => { data: @product.size_chart_data, explanation: @product.size_chart_explanation, size_chart: @product.size_chart }

#product-overlay

- cache [:side_panels, @product.id, current_site_version.code], expires_in:  configatron.cache.expire.long  do
  = render partial: 'side_panel_sizes'

  = render partial: 'side_panel_colours'

  = render partial: 'side_panel_customisation'

  = render partial: 'side_panel_height'

  - if @product.making_options.present?
    = render partial: 'side_panel_making_options', locals: { making_options: @product.making_options }
