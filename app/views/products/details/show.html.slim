ruby:
  url_params    = params.except(:controller, :action, :product_slug)
  product_paths = { default: collection_product_path(@product, url_params) }

  @product.default_color_options.each do |color|
    product_paths[color.id] = collection_product_path(@product, url_params.merge(color: color.name))
  end

  init_product_details_page = "
      page.initProductDetailsPage({
        product_paths: #{ product_paths.to_json },
        selector: {
          product_id: #{ @product.id },
          custom_id: #{ @product.master_id },
          variants: #{raw @product.available_options.variants.serialize.to_json },
          container: '.product-section--selection',
          size_input: {
            container: '#product-size-content',
            action: '#product-size-action'
          },
          color_input: {
            container:  '#product-color-content',
            action:     '#product-colorize-action',
            value:      '#{raw @product.color_id}'
          },
          customization_input: {
            container:  '#product-customizations-content',
            action:     '#product-customize-action'
          },
          making_options_input: {
            container:  '#product-making-options-content',
            action:     '#product-making-options-action',
            value:      '#{ raw @product.making_option_id }'
          },
          height_input: {
            container: '#product-height-content',
            action:    '#product-height-action',
            required:  #{Features.active?(:height_customisation) && @product.height_customisable?}
          }
        },
        moodboard_links: {
          container: '.dress-more.container.page-content',
          buttons: '.add-to-moodboard'
        },
        buyButton: '.buy-button',
        wishlistButton: '#add-to-moodboard',
        fitguideButton: '#fit-guide',
        fitguideContainer: '#fit-guide-content'
      });
  "

  init_product_details_page_new = "
    window.ProductDetails = window.ProductDetails || {};
    window.ProductDetails.colorOptions = #{ @product.default_color_options.to_json };
    window.ProductDetails.productImages = #{ @product.all_images.to_json };
    window.ProductDetails.selectedColor = #{ @product.color_id };
  "

= content_for :inline_javascript_top do
  = raw init_product_details_page_new

= content_for :inline_javascript do
  = raw init_product_details_page

= content_for :head
  - @product.cropped_images.each_with_index do |image, index|
    = tag :meta, name: "crop_image_#{index}", content: image.original

  - if params[:color]
    = tag :meta, name: 'robots', content: 'noindex, follow'

- if Features.active?(:marketing_modals)
  #modal-add-to-cart-template.hidden

.page-content.pdp
  .container
    .row
      .col-md-3
        .panel-side-wrap
          .panel-side.js-panel-side-left data-spy='affix'
            .panel-side-container
              h1.heading = @product.name
              - if @product.name.downcase.include?('skirt')
                p (Skirt Only)
              
              h5 Description
              p = raw @product.description
              ul
                li
                  a href='' About our model
                li
                  a href='' Add to Moodboard
                li
                  a href='' Share

      .col-md-6
        .panel-media
          .panel-media-inner-wrap
            .media-wrap
              = image_tag src='_temp/product1.jpg'
            .media-wrap
              = image_tag src='_temp/product1.jpg'
            .media-wrap
              = image_tag src='_temp/product1.jpg'
      .col-md-3
        .panel-side-wrap
          .panel-side.js-panel-side-right data-spy='affix'
            .panel-side-container
              h5 Specify your size
              
              h5 Design your dress
              
              .btn-wrap
                a.btn.btn-black.btn-lrg herf='javascript:;' ADD TO BAG
        


= render partial: 'micro_data'

#fit-guide-content.hidden
  = render :partial => 'size_guide', :locals => { data: @product.size_chart_data, explanation: @product.size_chart_explanation, size_chart: @product.size_chart }

#product-overlay

- cache [:side_panels, @product.id, current_site_version.code], expires_in:  configatron.cache.expire.long  do
  = render partial: 'side_panel_sizes'

  = render partial: 'side_panel_colours'

  = render partial: 'side_panel_customisation'

  = render partial: 'side_panel_height'

  - if @product.making_options.present?
    = render partial: 'side_panel_making_options', locals: { making_options: @product.making_options }
    
javascript:
  $(document).ready(function() {
    
    $('.js-panel-side-left').affix({
      offset: {
        top: $('.js-panel-side-left').offset().top,
        bottom: $('.js-footer').outerHeight(true) + 60 // wrapper bottom margin plus header height
      }
    });
    
    $('.js-panel-side-right').affix({
      offset: {
        top: $('.js-panel-side-right').offset().top,
        bottom: $('.js-footer').outerHeight(true) + 60 // wrapper bottom margin plus header height
      }
    });
      
  });
