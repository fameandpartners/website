ruby:
  url_params    = params.except(:controller, :action, :product_slug)
  product_paths = { default: collection_product_path(@bridesmaid_data[:product], url_params) }

  @bridesmaid_data[:product].default_color_options.each do |color|  
    product_paths[color.id] = collection_product_path(@bridesmaid_data[:product], url_params.merge(color: color.name))
  end

  @current_site_version = current_site_version
  discount  = @bridesmaid_data[:product].discount || { table: { amount: 0 } }
  @product_discount = discount.to_json

/ NOTE: this JS block is loaded into the head, this should contain page data only
/ TODO: @product source will need to be cleaned, we have way too many duplicated there
/       also images are mess, have to load all_images separately because images inside
/       of @pruduct.images include mix of images in defferent ratios.
/ TODO: every attribute has a `#to_json` or `raw` helper processing them. This means those could be extracted to their own structure and call a single `#to_json`
= content_for :head do
  javascript:
    window.PdpDataFull = {
      product: #{raw @bridesmaid_data[:product].to_json},
      discount: #{raw @product_discount},
      images: #{raw @bridesmaid_data[:product].all_images.to_json},
      selectedCustomizations: #{raw @bridesmaid_data[:selected_customizations].to_json},
      sizeChart: #{raw @bridesmaid_data[:product].size_chart_data.to_json},
      siteVersion: #{raw @current_site_version.name.to_json}
    };

= content_for :head
  - @bridesmaid_data[:product].cropped_images.each_with_index do |image, index|
    = tag :meta, name: "crop_image_#{index}", content: image.original


link rel="stylesheet" href="#{configatron.node_pdp_url}/#{webpack_assets['bridesmaidCssBundle']}"
div#bridesmaid-root.PDP__wrapper

javascript:
  window.__untransformedData = window.PdpDataFull

= render partial: 'micro_data'
= render :partial => '/data/bridesmaids_filter'

= content_for :microservice_js do
  script type="text/javascript" src="#{configatron.node_pdp_url}/#{webpack_assets['bridesmaidJSBundle']}"
