- content_for :head do
  = javascript_include_tag 'https://js.stripe.com/v3/'

javascript:
  var stripe = Stripe('#{get_stripe_key()}');

- if @credit_card_gateway.is_a?(Spree::Gateway::Pin)
  - content_for :head do
    - if Rails.env.production? && !@credit_card_gateway.prefers_test_mode?
      = javascript_include_tag 'https://api.pin.net.au/pin.js'
    - else
      = javascript_include_tag 'https://test-api.pin.net.au/pin.js'

  - content_for :inline_javascript do
    | Pin.setPublishableKey('#{@credit_card_gateway.options[:publishable_key]}');

= hidden_field_tag :return_type, 'DeliveryIns-25Control'

.row
  .col-xs-12
    h2.checkout-section-title Payment method
    / TODO - Rewrite as react component with new button layout and behaviour
    p How would you like to pay?
    
    ul.payment-option-grid.nav.nav-tabs.nav-justified.no-stack-mobile role="tablist"
      - if @credit_card_gateway
        li.payment-option.active
          a data-toggle="tab" href="#creditcard" aria-controls="creditcard" role="tab"
            i.fa.fa-credit-card
            | Credit Card
      - if @afterpay_method
        li.payment-option
          a data-toggle="tab" href="#afterpay" aria-controls="afterpay" role="tab"
            i.icon.icon-afterpay-symbol
            | Afterpay
      - if @pay_pal_method
        li.payment-option
          a data-toggle="tab" href="#paypal" aria-controls="paypal" role="tab"
            i.fa.fa-paypal
            | Paypalwwwww
      - if @quad_pay_method
        li.payment-option
          a data-toggle="tab" href="#quadpay" aria-controls="quadpay" role="tab"
            i.fa.fa-paypal
            | Quadpay

.row
  .col-xs-12
    .payment-selection.tab-content
      - if @credit_card_gateway
        #creditcard.payment-selected.tab-pane.in.active role="tabpanel"
          - if @credit_card_gateway.is_a?(Spree::Gateway::Pin)
            = form_for @order, :url => update_checkout_path(@order.state), :remote => true, :html => { :class => ['payment_details form-global checkout-form', 'credit_card', @credit_card_gateway.class.name.demodulize.underscore] } do |form|
              - payment_failure = payment_failed_messages(@order.errors.full_messages.first.to_s)
              - if payment_failure
                .title Try a different payment method?
                .sub We'd love to make this happen for you, but there was a problem with your credit card.

              = render 'shared/error_messages', :target => @order, :view => "payment"

              = hidden_field_tag "order[payments_attributes][][payment_method_id]", @credit_card_gateway.id
              = render :partial => "spree/checkout/payment/#{@credit_card_gateway.method_type}", :locals => { :payment_method => @credit_card_gateway }

          - elsif @credit_card_gateway.is_a?(Spree::Gateway::FameStripe)
            = render :partial => "spree/checkout/payment/stripe"

      - if @afterpay_method
        #afterpay.panel-afterpay.text-center.payment-selected.tab-pane role="tabpanel"
          = render 'checkout/v1/spree/checkout/payment/afterpay', spree_order: @order, afterpay_method: @afterpay_method

      - if @pay_pal_method
        #paypal.text-center.payment-selected.tab-pane role="tabpanel"
          p.hint Place your order and you will complete your purchase via the Paypal.
          = link_to paypal_express_path(payment_method_id: @pay_pal_method.id), method: :post, id: 'paypal_button', alt: 'Paypal', class: 'js-returns-abc-paypal payment-cta btn btn-black btn-block btn-md' do
            | Pay with
             =<> image_tag('checkout/logo/paypal-logo-white.png')

      - if @quad_pay_method
        #quadpay.text-center.payment-selected.tab-pane role="tabpanel"
          p.hint Place your order and you will complete your purchase via the Quadpay.
          = link_to confirm_quad_pay_checkout_path(payment_method_id:@quad_pay_method.id), method: :post, id: 'quadpay_button', alt: 'Quadpay', class: 'js-returns-abc-paypal payment-cta btn btn-black btn-block btn-md' do
            | Pay with quadpay

    p.terms-note.text-center
        ' By making this purchase you are agreeing to the
        = link_to 'Term & Conditions.', '/terms', class: "link-underline-lighter"
