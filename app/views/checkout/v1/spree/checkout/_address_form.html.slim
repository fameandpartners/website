ruby:
  address_id = address_type.chars.first
  first_name = form.object.firstname.present? ? form.object.firstname : (@order.try(:first_name) || @user.try(:first_name))
  last_name = form.object.lastname.present? ? form.object.lastname : (@order.try(:last_name) || @user.try(:last_name))
  shopping_bag_texts = Preferences::ShoppingBag.new(current_site_version)

- if Spree::Config[:address_requires_state]
  ruby:
    states = available_states_for_current_zone
    address = set_us_default(address)
    have_states = address.country.states.present?
    # copied from instance_tag#tag_id helper method
    sanitized_object_name = form.object_name.gsub(/\]\[|[^-a-zA-Z0-9:.]/, "_").sub(/_$/, "")
    field_id = "#{ sanitized_object_name }_state_id"
    state_text_field_id = "#{ sanitized_object_name }_state_name"
    country_field_id = "#{ sanitized_object_name }_country_id"

  = content_for :inline_javascript do
    | $('##{ field_id }').val('#{ address.state_id }');
    | checkout_page.updateStatesVisibility('##{ country_field_id }', '##{ field_id }', '##{state_text_field_id}');

    | $('##{ country_field_id }').on('change', function() {
    |   checkout_page.updateStatesVisibility('##{ country_field_id }', '##{ field_id }', '##{state_text_field_id}');
    | });

/ TODO - Temporary workaround to show the 'Address Details heading inside the form
/ until we move the shipping form first and change the JS to copy billing address from shipping instead.
/  - Note that Pin requires the billing address data, so we can't just drop the billing form.

- if address_type == 'billing'
  .row
    .col-md-12.form-group
      = form.label :email, with_required_mark(t(:email))
      = form.text_field :email, class: 'required form-control form-control-md', value: form.object.email, required: 'required'

- if Features.active?(:checkout_fb_login)
  - if !signed_in?
    = link_to 'Sign in with Facebook', fb_auth_path(site_version: current_site_version.code), class: 'btn btn-facebook btn-black btn-md'

  / Temporary location for heading.
h2.checkout-section-title
  - if address_type == 'billing'
    | 2. Address Details
  - elsif address_type == 'shipping'
    | 2.1 Shipping Address Details

- if Features.active?(:shipping_message)
  p
    = shopping_bag_texts.shipping_message
    br
    | We apologise for any inconvenience.
.row
  .col-md-6.form-group
    = form.label :firstname, with_required_mark(t(:first_name))
    = form.text_field :firstname, class: 'required form-control form-control-md', value: first_name, required: 'required'
  .col-md-6.form-group
    = form.label :lastname, with_required_mark(t(:last_name))
    = form.text_field :lastname, class: 'required form-control form-control-md', value: last_name, required: 'required'

.row
  .col-md-12.form-group
    = form.label :address1, with_required_mark(t(:street_address))
    = form.text_field :address1, class: 'required form-control form-control-md', required: 'required'
    p.help-block Must be a physical address, not a P.O. Box

.row
  .col-md-12.form-group
    = form.label :address2, t(:street_address_2)
    = form.text_field :address2, class: 'required form-control form-control-md'

.row
  .col-md-4.form-group
    = form.label :city, with_required_mark(t(:city))
    = form.text_field :city, class: 'required form-control form-control-md', required: 'required'

  .col-md-4.form-group class=(address.country.states_required ? '' : 'hidden')
    = form.label :state, with_required_mark(t(:state))
    span.states_selector_container  class=(have_states ? 'required' : 'hidden')
      select id=(field_id) name="#{form.object_name}[state_id]" class="form-control form-control-md selectbox" disabled=(!have_states)
        option value='' data-country=''
        - states.each do |state|
          option selected=(address.state_id == state.id) style=(state.country_id == address.country_id ? '' : 'display: none;') value=(state.id) data-country=(state.country_id) = state.name

    = form.text_field(:state_name,
                      :class => !have_states ? 'required  form-control form-control-md' : 'hidden  form-control form-control-md',
                      :disabled => have_states)

  .col-md-4.form-group
    = form.label :country_id, with_required_mark(t(:country))
    select id=(country_field_id) name="#{form.object_name}[country_id]" class="form-control form-control-md selectbox"
      - available_countries_for_current_zone.each do |country|
        - select_country = (address.country_id == country.id ? true : false )
        option selected=(select_country) value=(country.id) data-states-required=(country.states_required ? 'required' : nil)
          = country.name

.row
  .col-md-6.form-group
    = form.label :phone, with_required_mark(t(:phone_number))
    = form.phone_field :phone, class: 'required form-control form-control-md', required: 'required'

  .col-md-6.form-group
    = form.label :zipcode, with_required_mark(t(:zip))
    = form.text_field :zipcode, class: 'required form-control form-control-md', required: 'required'

/- if address_type == 'billing'
  .row
    .col-md-4.form-group
      = form.parent_builder.label :required_to, 'When is your dress needed?'
      = form.parent_builder.text_field :required_to, value: @order.required_to, class: 'form-control form-control-md'
