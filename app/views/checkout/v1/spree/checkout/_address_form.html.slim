ruby:
  address_id = address_type.chars.first
  first_name = form.object.firstname.presence || @order.try(:first_name) || @user.try(:first_name)
  last_name = form.object.lastname.presence || @order.try(:last_name) || @user.try(:last_name)
  countries = available_countries_for_current_zone
  countries_with_fees = Hash[countries.map do |country|
    [
      country.id,
      {
        shipping_fee: country.zone_member.has_international_shipping_fee,
        duty_fee: country.zone_member.show_duty_fee_notification || country.zone_member.has_international_shipping_fee
      }
    ]
  end]

- if Spree::Config[:address_requires_state]
  ruby:
    states = available_states_for_current_zone
    address = set_us_default(address)
    have_states = address.country.states.present?
    # copied from instance_tag#tag_id helper method
    sanitized_object_name = form.object_name.gsub(/\]\[|[^-a-zA-Z0-9:.]/, "_").sub(/_$/, "")
    field_id = "#{ sanitized_object_name }_state_id"
    state_text_field_id = "#{ sanitized_object_name }_state_name"
    country_field_id = "#{ sanitized_object_name }_country_id"

  = content_for :inline_javascript do
    | page.initExtraFeesAlert();
    | $('#international_shipping_fee').click(window.checkout_page.extraFeesAlert.internationalShippingFeeCheckboxClicked);

    | $('##{ field_id }').val('#{ address.state_id }');
    | checkout_page.updateStatesVisibility('##{ country_field_id }', '##{ field_id }', '##{state_text_field_id}');

    | $('##{ country_field_id }').on('change', function() {
    |   checkout_page.updateStatesVisibility('##{ country_field_id }', '##{ field_id }', '##{state_text_field_id}');
    | });

    | $('##{ country_field_id }').change(checkout_page.extraFeesAlert.countryChanged);

    | checkout_page.countries = #{raw countries_with_fees.to_json};
    | $('##{ country_field_id }').trigger('change');
/ TODO - Temporary workaround to show the 'Address Details heading inside the form
/ until we move the shipping form first and change the JS to copy billing address from shipping instead.
/  - Note that Pin requires the billing address data, so we can't just drop the billing form.

.row
  .col-xs-12
    h2.checkout-section-title
      - if address_type == 'billing'
        span.billing-heading Billing Address
      - else
        | Deliver to

.row
  .col-md-6.form-group
    = form.label :firstname
    = form.text_field :firstname, class: 'required form-control form-control-md', value: first_name, required: 'required'

  .col-md-6.form-group
    = form.label :lastname
    = form.text_field :lastname, class: 'required form-control form-control-md', value: last_name, required: 'required'

- if address_type == 'shipping'
  .row
    .col-md-12.form-group
      = form.label :email
      = form.email_field :email, class: 'required form-control form-control-md js-checkout-email-shipping', value: form.object.email, required: 'required'
- elsif address_type == 'billing'
      = form.hidden_field :email, class: 'required form-control form-control-md js-checkout-email-billing', value: form.object.email
- if !signed_in?
  .row
    .col-xs-12.form-group
      .form-group.custom-form-element-thin.checkbox-black-bg.checkbox-inline
        = check_box_tag 'subscribe', 'Subscribe'
        label for="subscribe" Receive new styles in my inbox each week

.row
  .col-xs-12.form-group
    = form.label :phone
    p.help-block.pull-right in case we need to contact you about your order
    = form.phone_field :phone, class: 'required form-control form-control-md', required: 'required'

- if address_type == 'shipping'
  .row
    .col-xs-12
      h2.checkout-section-title
          | Delivery Address

.row
  .col-xs-12.form-group
    = form.label :country_id
    select id=(country_field_id) name="#{form.object_name}[country_id]" class="form-control form-control-md selectbox"
      - countries.each do |country|
        - select_country = (address.country_id == country.id ? true : false )
        option selected=(select_country) value=(country.id) data-states-required=(country.states_required ? 'required' : nil)
          = country.name

.row
  .col-md-12.form-group
    = form.label :address1
    p.help-block.pull-right this must be a physical address, not a P.O. Box
    = form.text_field :address1, class: 'required form-control form-control-md', required: 'required'

.row
  .col-md-12.form-group
    = form.label :address2
    p.help-block.pull-right
      | (optional)
    = form.text_field :address2, class: 'required form-control form-control-md'

.row
  .col-xs-12.form-group
    = form.label :city
    = form.text_field :city, class: 'required form-control form-control-md', required: 'required'

.row
  .col-md-6.form-group
    = form.label :zipcode
    = form.text_field :zipcode, class: 'required form-control form-control-md', required: 'required'

  .col-md-6.form-group class=(address.country.states_required ? '' : 'hidden')
    = form.label :state
    span.states_selector_container  class=(have_states ? 'required' : 'hidden')
      select id=(field_id) name="#{form.object_name}[state_id]" class="form-control form-control-md selectbox" disabled=(!have_states)
        option value='' data-country=''
        - states.each do |state|
          option selected=(address.state_id == state.id) style=(state.country_id == address.country_id ? 'display: block;' : 'display: none;') value=(state.id) data-country=(state.country_id) = state.name

    = form.text_field(:state_name,
                      :class => !have_states ? 'required  form-control form-control-md' : 'hidden  form-control form-control-md',
                      :disabled => have_states)

/- if address_type == 'billing'
  .row
    .col-md-4.form-group
      = form.parent_builder.label :required_to, 'When is your dress needed?'
      = form.parent_builder.text_field :required_to, value: @order.required_to, class: 'form-control form-control-md'
