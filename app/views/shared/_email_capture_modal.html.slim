- if session[:show_promocode_modal].present?
  ruby:
    promocode_to_show = decode(session[:show_promocode_modal])
    session.delete(:show_promocode_modal)
    show_promocode_modal = "
      new window.page.PromocodeModal({
        promocode: \"#{ promocode_to_show }\" 
      });
    "
  = content_for :inline_javascript do
    = raw show_promocode_modal

- if pop?
  ruby:
    promocode = decode(params[:pc])
    template_name = params[:tn].present? ? decode(params[:tn]) : 'default'
    heading = decode(params[:h])
    message = decode(params[:m])
    content = decode(params[:c]) || promocode
    class_name = decode(params[:s]) || class_name
    timeout = params[:t] || 3
    timer   = params[:ti] ? decode(params[:ti]) : nil

    auto_apply = session[:auto_apply]
    session.delete(:auto_apply)

    email_capture_modal = "
      var modal_popup = new window.page.EmailCaptureModal({
        promocode: \"#{promocode}\",
        content:   \"#{content}\",
        heading:   \"#{heading}\",
        message:   \"#{message}\",
        className: \"#{class_name}\",
        action:    \"#{campaigns_email_capture_path}\",
        container: \"#modal-popup-content-template\",
        timeout:    #{auto_apply ? 100000 : timeout},
        timer:      #{timer || 0},
        auto_apply_promo: #{params[:aap].present? && params[:aap].to_s == 'true'},
        force:      true
      });
    "
    email_capture_modal += "modal_popup.enableAutoApply();" if auto_apply

  = content_for :inline_javascript do
    = raw email_capture_modal


  - if template_name == 'blank'
    #modal-popup-content-template.hidden
      input type="hidden" name="content" value=content
      input type="hidden" name="promocode" value=promocode
        / no content, avoid hiding all with css

  - elsif template_name == 'signup'
    #modal-popup-content-template.hidden
      input type="hidden" name="content" value=content
      input type="hidden" name="promocode" value=promocode
      .vex-footer
        .row
          .col-sm-5
            - if promocode == 'birthdaybabe' 
              = link_to 'Redeem via Facebook', fb_auth_path(show_promocode_modal: encode(promocode)), class: 'btn btn-facebook btn-block btn-md'
            - elsif params[:aap].to_s == 'true'
              = link_to 'Redeem via Facebook', fb_auth_path(auto_apply: true), class: 'btn btn-facebook btn-block btn-md'
            - else
              = link_to 'Redeem via Facebook', fb_auth_path, class: 'btn btn-facebook btn-block btn-md'

          .col-sm-2
            .or-rhombus: .rhombus: .rhombus-text-holder: .rhombus-text or
          .col-sm-5
            .input-group
              input.form-control.form-control-md.form-control-transparent name="email" type="text" placeholder="Redeem via e-mail"
              span.input-group-addon
                input.btn-reset type="submit" value="Send"

  - else # default, support legacy
    #modal-popup-content-template.hidden
      input type="hidden" name="content" value=content
      input type="hidden" name="promocode" value=promocode
      .row.no-padding
        .col-md-8.col-md-offset-2.text-center
          input.form-control.standard-form type="email" name="email" placeholder='email address'
      .row.no-padding
        .col-md-12.text-center
          button.btn.submit type="submit" value="submit"
            | Submit
