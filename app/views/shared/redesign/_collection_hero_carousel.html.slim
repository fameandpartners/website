ruby:
  def hero_text_position(position)
    case position
    when "left"
      {class: 'HeroTileCaption__alignmentLeft'}
    when "right"
      {class: 'HeroTileCaption__alignmentRight'}
    else
      # Defaults to 'Center'...
      {class: 'CopyWrap__position--center'}
    end
  end

  def hero_text_color(color)
    case color
    when "white"
      {class: 'HeroTileCaption--white'}
    else
      # Defaults to 'Black'...
      {class: ''}
    end
  end

  def hero_text_size(size)
    case size
    when "small"
      {class: 'title title--small'}
    when "large"
      {class: 'title title--large'}
    else
      {class: 'title'}
    end
  end

  def hero_vertical_position(position)
    case position
    when "top"
      {class: 'HeroTileCaption__verticalPositionTop u-overlay-area__caption--top'}
    when "bottom"
      {class: 'HeroTileCaption__verticalPositionBottom u-overlay-area__caption--bottom'}
    else
      # Defaults to 'center'...
      {class: 'HeroTileCaption__verticalPositionCenter u-overlay-area__caption--center'}
    end
  end

// Hero Tiles - via Contentful CMS
- hero_tiles = @home_page_container[:hero_tiles].each do |tile|
  - current_tile_site_version = tile[:hero_tile_site_version]

  - if current_tile_site_version.nil? || current_tile_site_version == current_site_version[:permalink].downcase || current_tile_site_version == "all"
    .u-overlay-area
      .Hero__media.u-overlay-area__media
        = link_to tile[:link]

          - current_tile_image = tile[:image]
          - current_tile_mobile_image = tile[:mobile_image]

          - if tile[:video]
            - current_tile_video = tile[:video]
            - current_tile_mobile_video = tile[:mobile_video]

            video.js-hero-tile-video.HeroTile__video.hidden-xs.hidden-sm(muted playsinline webkit-playsinline preload autoplay="true" loop="true" aria-hidden="false" src="#{current_tile_video}" poster="#{current_tile_image}")
            video.js-hero-tile-video.HeroTile__video.hidden-md.hidden-lg(muted playsinline webkit-playsinline preload autoplay="true" loop="true" aria-hidden="false" src="#{current_tile_mobile_video}" poster="#{current_tile_mobile_image}")

          - else

            picture
              source media="(max-width: 991px)" srcset="#{current_tile_mobile_image}"
              source media="(min-width: 992px)" srcset="#{current_tile_image}"
              img.img-responsive src="#{current_tile_image}" srcset="
                #{current_tile_mobile_image} 991w,
                #{current_tile_image} 992w"

          .u-overlay-area__overlay
            // Desktop
            - if tile[:heading].present? || tile[:sub_heading].present? || tile[:cta_button_text].present?
              .Hero__caption.u-overlay-area__caption.hidden-xs.hidden-sm*hero_vertical_position(tile[:text_vertical_position]) *hero_text_color(tile[:text_color]) *hero_text_position(tile[:text_position]) style="padding-top: #{tile[:extra_padding_top]}"
                .copy-wrap.text-center.main-hero-wrap.hero-wrap
                  h2.heading.no-margin-md
                    - if tile[:heading].present?
                      span*hero_text_size(tile[:text_size])
                        - tile[:heading].each do |heading|
                          == heading
                          br
                    - if tile[:sub_heading].present?
                      span.sub-heading--small
                        - tile[:sub_heading].each do |sub_heading|
                          == sub_heading
                          br

                  - if tile[:cta_button_text].present?
                    .CtaButton__content.Btn__ctaHeroTile.Btn__ctaFade style="background: #{tile[:cta_button_background_color]}; color: #{tile[:cta_button_text_color]}; border: 1px solid #{tile[:cta_button_border_color]}"
                        = tile[:cta_button_text]

              // Mobile
              - if tile[:heading_mobile].present? || tile[:sub_heading_mobile].present? || tile[:cta_button_text].present?
              .Hero__caption.u-overlay-area__caption.hidden-lg.hidden-md*hero_vertical_position(tile[:text_vertical_position_mobile]) *hero_text_color(tile[:text_color]) style="padding-top: #{tile[:extra_padding_top_mobile]}"
                .CopyWrap__position--center
                  .copy-wrap.text-center.main-hero-wrap.hero-wrap
                    h2.heading.no-margin-md
                      - if tile[:heading_mobile]
                        span
                          - tile[:heading_mobile].each do |heading_mobile|
                            == heading_mobile
                            br
                      - if tile[:subheading_mobile].present?
                        span.sub-heading--small
                          - tile[:subheading_mobile].each do |subheading_mobile|
                            == subheading_mobile
                            br

                    - if tile[:cta_button_text].present?
                      .CtaButton__content.Btn__ctaHeroTile.Btn__ctaFade style="background: #{tile[:cta_button_background_color]}; color: #{tile[:cta_button_text_color]}; border: 1px solid #{tile[:cta_button_border_color]}"
                          = tile[:cta_button_text]
