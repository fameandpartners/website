ruby:
  def hero_text_position(position)
    case position
    when "Far-Left"
      {class: 'col-md-6'}
    when "Left"
      {class: 'col-lg-4 col-md-5 col-md-offset-3'}
    when "Center-Left"
      {class: 'col-md-6 col-lg-4 CopyWrap__position--center'}
    when "Center-Right"
      {class: 'col-md-6 col-lg-6 pull-right'}
    when "Right"
      {class: 'col-md-4 col-lg-4 pull-right'}
    when "Far-Right"
      {class: 'col-md-6 pull-right'}
    else
      # Defaults to 'Center'...
      {class: 'col-md-4 col-md-offset-4'}
    end
  end

  def hero_extra_padding(side)
    case side
    when "Left"
      {class: 'extra-padding-left'}
    when "Right"
      {class: 'extra-padding-right'}
    else
      # Defaults to 'None'...
      {class: ''}
    end
  end

  def hero_text_alignment(alignment)
    case alignment
    when "Center"
      {class: 'text-center'}
    when "Right"
      {class: 'text-right'}
    else
      # Defaults to 'Left'...
      {class: ''}
    end
  end

  def hero_text_color(color)
    if color == "White"
      {class: 'main-hero-wrap hero-wrap copy-left white-text'}
    else
      # Defaults to 'Black'...
      {class: 'main-hero-wrap hero-wrap copy-left'}
    end
  end

  def hero_text_size(size)
    case size
    when "Small"
      {class: 'title title--small hidden-xs hidden-sm'}
    else
      # Defaults to 'Large' option...
      {class: 'title title--large hidden-xs hidden-sm'}
    end
  end

// Hero Tiles - via Contentful CMS
- hero_tiles = @home_page_container[:hero_tiles].each do |tile|
  - current_tile_image = tile[:image]
  - current_tile_mobile_image = tile[:mobile_image]
  = link_to tile[:link], hero_text_color(tile[:text_color]), data: { description: tile[:description] }
    picture.media-wrap
      source media="(max-width: 991px)" srcset="#{current_tile_mobile_image}"
      source media="(min-width: 992px)" srcset="#{current_tile_image}"
      img src="#{current_tile_image}" srcset="
        #{current_tile_mobile_image} 991w,
        #{current_tile_image} 992w"

    .content-wrap
      .container-fluid
        .row
          *hero_text_position(tile[:text_position])
            .copy-wrap*hero_extra_padding(tile[:text_padding]) *hero_text_alignment(tile[:text_align])
              h2.heading.no-margin-md
                span*hero_text_size(tile[:text_size])
                  - if tile[:heading]
                    - tile[:heading].each do |heading|
                      == heading
                      br
                span.sub-heading--small.hidden-xs.hidden-sm
                  - if tile[:sub_heading]
                    - tile[:sub_heading].each do |sub_heading|
                      == sub_heading
                      br
              .cta-wrapper
                - if tile[:cta_button_text]
                  span.btn-md.btn-featured
                    = tile[:cta_button_text][0]
                    span.copy-highlight.cta-button-secondary-text
                      = tile[:cta_button_text][1]

        .col-sm-12.col-md-12.hidden-md.hidden-lg
          .copy-wrap.text-center
            h2.heading.mobile-heading
              span.sub-heading
                - tile[:mobile_text].each do |mobile_text|
                  == mobile_text
                  br
