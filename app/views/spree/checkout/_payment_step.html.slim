- if !current_step.eql?('payment')
  h2.checkout-section-title Payment Details
  / br
- else
  - if @credit_card_gateway.is_a?(Spree::Gateway::Pin)
    - content_for :head do
      - if Rails.env.production? && !@credit_card_gateway.prefers_test_mode?
        = javascript_include_tag 'https://api.pin.net.au/pin.js'
      - else
        = javascript_include_tag 'https://test-api.pin.net.au/pin.js'

  - if @credit_card_gateway.present?
    ruby:
      gateway_options = {}
      if @credit_card_gateway.is_a?(Spree::Gateway::Pin)
        gateway_type = 'pin'
        gateway_options = { key: @credit_card_gateway.options[:publishable_key] }
      elsif @credit_card_gateway.is_a?(Spree::Gateway::NabTransactGateway)
        gateway_type = 'nab'
      else
        gateway_type = null
      end
      gateway_options ||= {}
      init_checkout_payment_form = "
        checkout.payment_step.init({
          bill_address: bill_address,
          gateway_type: '#{ gateway_type }',
          gateway_options: #{raw gateway_options.to_json}
        });
      "
    - content_for :inline_javascript do
      | var bill_address = #{raw ::AddressSerializer.new(current_order.bill_address).to_json };
      = raw init_checkout_payment_form

  h2.checkout-section-title Payment Details
  / br
  .form-group
    .row
      - if @credit_card_gateway
        .col-sm-4
          .btn-group-radio
            input#optionsRadios1 name="optionsRadios" type="radio" value="option1"
            button.btn.btn-block.btn-md
              label.credit for="optionsRadios1"
                | Credit Card

      - if @credit_card_gateway && @pay_pal_method
        .col-sm-4.text-center
          .btn.btn-text.btn-md or

      - if @pay_pal_method
        .col-sm-4.text-center = paypal_express_button

  - if @credit_card_gateway

    = form_for @order, :url => update_checkout_path(@order.state), :remote => true, :html => { :class => ['payment_details form-global checkout-form', 'credit_card', @credit_card_gateway.class.name.demodulize.underscore] } do |form|
      = render 'shared/error_messages', :target => @order, :view => "payment"

      = hidden_field_tag "order[payments_attributes][][payment_method_id]", @credit_card_gateway.id
      = render :partial => "spree/checkout/payment/#{@credit_card_gateway.method_type}", :locals => { :payment_method => @credit_card_gateway }
