css:
  table.compact td { padding: 0 10px; } 
  table.compact td a { padding: 0 5px; } 
  ul.filters-boxes.collection li { cursor: pointer; }
  ul.filters-boxes.collection li.active { color: blue; font-weight: 800; }

- content_for :page_title do
  = "Products order"

= render :partial => 'spree/admin/shared/product_sub_menu'

ul.filters-boxes.collection
  li.active data-range='all' All
  - available_product_ranges.each do |taxon|
    li data-range=( taxon.id ) = taxon.name

- if @collection.any?
  table.index.sortable.compact data-sortable=( admin_product_positions_url )
    colgroup
       col style="width: 15%;"
       col style="width: 20%;"
       col style="width: 48%;"
    thead
      tr
        th = ''
        th = t(:sku)
        th = t(:name)
    tbody
      - @collection.each do |product| 
        - taxon = range_taxon_for(product)
        tr data-range=(taxon.try(:id)) id=( spree_dom_id product )
          td
            span.handle 
            = link_to 'to top', '#', data: { move: 'top' }
            = link_to 'to bottom', '#', data: { move: 'bottom' }
          td = product.sku
          td = product.name



javascript: 
  moveItemToBottom = function(e){
    e.preventDefault();
    $tr = $(e.currentTarget).closest('tr');
    lastVisibleElement = $('table.sortable tbody tr:visible:last');
    if (lastVisibleElement[0] != $tr[0]) {
      $tr.detach().insertAfter(lastVisibleElement);
      storePosition();
    };
    return true;
  }

  moveItemToTop = function(e) {
    e.preventDefault();
    $tr = $(e.currentTarget).closest('tr');
    firstVisibleElement = $('table.sortable tbody tr:visible:first');
    if (firstVisibleElement[0] !== $tr[0]) {
      $tr.detach().insertBefore(firstVisibleElement);
      storePosition();
    };
    return true;
  }

  storePosition = function() {
    $("#progress").show();
    $.ajax({
      type: 'POST',
      dataType: 'script',
      url: $("table.sortable").data("sortable-link"),
      data: getPositions(),
      success: function(data){ $("#progress").hide(); }
    }); 
  }

  getPositions = function() {
    positions = {}
    $.each($('table.sortable tbody tr'), function(position, obj){
      reg = /spree_(\w+_?)+_(\d+)/;
      parts = reg.exec($(obj).attr('id'));
      if (parts) {
        positions['positions['+parts[2]+']'] = position;
      }
    });
    return positions;
  }

  applyFilter = function(e) {
    console.log('apply filter');
    e.preventDefault();
    selected = $(e.target).data('range')
    $(e.target).addClass('active').siblings().removeClass('active');
    $('table.sortable tbody tr').show();
    if (selected !== 'all') {
      $('table.sortable tbody tr[data-range!=' + selected + ']').hide();
    }
    return true;
  }

  $(document).ready(function(){
    $("table.sortable tbody a[data-move='top']").on('click', moveItemToTop)
    $("table.sortable tbody a[data-move='bottom']").on('click', moveItemToBottom)

    $('ul.filters-boxes.collection li').on('click', applyFilter)
  })
