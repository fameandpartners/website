css:
  table.compact td { padding: 0 10px; } 
  table.compact td a { padding: 0 5px; } 
  ul.filters-boxes.collection li { cursor: pointer; }
  ul.filters-boxes.collection li.active { color: blue; font-weight: 800; }

- content_for :page_title do
  = "Products order"

- content_for :page_actions do
  .toolbar data-hook="toolbar"
    ul.toolbar.inline-menu
      li#apply_changes
        = link_to 'Apply changes', admin_product_positions_path, method: 'put', remote: true, class: 'icon-plus button', id: 'admin_new_product_accessory'

= render :partial => 'spree/admin/shared/product_sub_menu'

ul.filters-boxes.collection
  li.active data-range='all' All
  - available_product_ranges.each do |taxon|
    li data-range=( taxon.id ) = taxon.name

- if @collection.any?
  table.index.sortable.compact#product-positions data-sortable=( admin_product_positions_url )
    colgroup
       col style="width: 15%;"
       col style="width: 20%;"
       col style="width: 48%;"
    thead
      tr
        th = ''
        th = t(:sku)
        th = t(:name)
    tbody
      - @collection.each do |product| 
        - taxon_ids = product.taxons.select{|t| t.taxonomy_id == range_taxonomy.id}.map(&:id)
        tr data-ids=( taxon_ids ) data-id="#{product.id}" id=( spree_dom_id product )
          td
            span.handle 
            = link_to 'to top', '#', data: { move: 'top' }
            = link_to 'to bottom', '#', data: { move: 'bottom' }
          td = product.sku
          td = product.name



javascript: 
  moveItemToBottom = function(e){
    e.preventDefault();
    $tr = $(e.currentTarget).closest('tr');
    lastVisibleElement = $('table.sortable tbody tr:visible:last');
    if (lastVisibleElement[0] != $tr[0]) {
      $tr.detach().insertAfter(lastVisibleElement);
      storePosition();
    };
    return true;
  }

  moveItemToTop = function(e) {
    e.preventDefault();
    $tr = $(e.currentTarget).closest('tr');
    firstVisibleElement = $('table.sortable tbody tr:visible:first');
    if (firstVisibleElement[0] !== $tr[0]) {
      $tr.detach().insertBefore(firstVisibleElement);
      storePosition();
    };
    return true;
  }

  storePosition = function() {
    $("#progress").show();
    $.ajax({
      type: 'POST',
      dataType: 'script',
      url: $("table.sortable").data("sortable-link"),
      data: { positions: getPositions() },
      success: function(data){ $("#progress").hide(); }
    }); 
  }

  getPositions = function() {
    result = {};
    _.each($('table.sortable tbody tr'), function(tr, position) {
      id = $(tr).data('id');
      if (id) {
        result[id] = position;
      }
    });
    return result
  }

  applyFilter = function(e) {
    e.preventDefault();
    selected = $(e.target).data('range')
    $(e.target).addClass('active').siblings().removeClass('active');
    if (selected == 'all') {
      $('table.sortable tbody tr').show();
    } else {
      _.each($('table.sortable tbody tr'), function(row) {
        $row = $(row)
        if (_.indexOf($row.data('ids'), selected) == -1) {
          $row.hide();
        } else {
          $row.show();
        };
      });
    }
    return true;
  }

  $(document).ready(function(){
    $("table.sortable tbody a[data-move='top']").on('click', moveItemToTop)
    $("table.sortable tbody a[data-move='bottom']").on('click', moveItemToBottom)

    $('ul.filters-boxes.collection li').on('click', applyFilter)
  })
