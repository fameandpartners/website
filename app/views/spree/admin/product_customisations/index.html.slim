= render :partial => 'spree/admin/shared/product_sub_menu'

= render :partial => 'spree/admin/shared/product_tabs', :locals => { :current => 'Customisations' }

= render :partial => 'spree/shared/error_messages', :locals => { :target => @product }

/- content_for :page_actions do
/  ul.tollbar.inline-menu
/    li
/      = link_to_add_fields t(:add_new_category), 'tbody#product_customisation_types', class: 'icon-plus button'

table.index
  colgroup
    col style="width: 5%;"
    col style="width: 25%;"
    col style="width: 25%;"
    col style="width: 25%;"
    col style="width: 20%;"
  thead
    tr
      th Name
      th Presentation
      th Image
      th Price
      th
  tbody
    - @collection.each do |customization_value|
      tr
        td = customization_value.name
        td = customization_value.presentation
        td
          - if customization_value.image.present?
            = image_tag customization_value.image.url(:small)
        td = customization_value.display_price
        td
          = link_to_edit(customization_value, no_text: true)
          = link_to_delete(customization_value, no_text: true, remote: true, method: 'delete')

/= form_for @product, :url => admin_product_url(@product), :method => :put do |f|
/  fieldset.no-border-top
/    = image_tag 'spinner.gif', :plugin => 'spree', :style => 'display:none;', :id => 'busy_indicator'
/
/    table class="index sortable" data-hook=""
/      thead
/        tr data-hook="product_customisation_types_header"
/          th Category Name
/          th class="actions"
/      tbody id="product_customisation_types" data-hook="" data-include-invisible="true"
/        - @product.product_customisation_types.new
/        = f.fields_for :product_customisation_types do |cust_form|
/          = render :partial => 'product_customisation_type_fields', :locals => { :f => cust_form }
/
/    = render :partial => 'spree/admin/shared/edit_resource_links'
/
/javascript:
/  var customisationsJson = #{{customisations_values_json.to_json}};
/coffee:
/  createCustomisationValueFor = (val, baseId, baseName) ->
/    baseId ||= 'new_customisation_value'
/    selected = _(customisationsJson).find (type) =>
/      type.customisation_type.id == val
/
/    baseId = "#{baseId}_#{new Date().getTime()}"
/
/    valueName = baseName + '[customisation_value_id]'
/
/    $valuesSelect = $('<select/>', name: valueName, id: baseId + '_cv', class: 'select2')
/    _(selected.customisation_type.customisation_values).each (value) ->
/      $valuesSelect.append($('<option/>', value: value.id).text(value.presentation))
/
/    $valueImage = $('<input />', type: 'file', name: baseName + '[image]')
/    $valueDeleteFlag = $('<input />', type: 'hidden', value: '1', name: baseName + '[_destroy]')
/    $valueDeleteLink = $('<a />', href: '#', class: 'remove_fields no-text with-tip icon_link with-tip icon-trash', 'data-action': 'remove', 'data-wrapper-selector': '.single-value')
/    $singleValue = $('<div/>', class: 'single-value fields hidden', id: baseId + '_wrapper').
/      append($valuesSelect).
/      append($valueImage).
/      append($valueDeleteFlag).
/      append($valueDeleteLink)
/
/  $('#product_customisation_types tr:last').hide()
/  $('#product_customisation_types').on 'spree:field-added', (event, $newRow) ->
/    $('td.actions .edit', $newRow).hide()
/    $select = $('.select2-hidden', $newRow)
/    $('.add_fields', $newRow).data('target', "##{$newRow.id} .values-holder")
/    $select.select2().select2('val', '').on 'change', ->
/      return unless val = parseInt($(this).val())
/
/      baseName = $(this).attr('name').replace('[customisation_type_id]', '[product_customisation_values_attributes][0]')
/      $singleValue = createCustomisationValueFor(val, $newRow.id, baseName)
/      $('.values-holder', $newRow).html($singleValue)
/
/      $(this).select2('destroy')
/      presentation = $(this).find('option:selected').text()
/      $id = $('<input />', type: 'hidden', value: val, name: $(this).attr('name'))
/      $(this).after($id)
/      $(this).replaceWith($('<input />', type: 'text', value: presentation))
/
/      $('td.actions .edit', $newRow).show()
/
/
/  $('#product_customisation_types').delegate '.values-holder', 'spree:field-added', (event, $newRow) ->
/    event.preventDefault()
/    event.stopPropagation()
/    unless $newRow
/      $typeId = $(this).closest('.product_customisation_type').find('input[id$="_customisation_type_id"]')
/      val = $typeId.val()
/      baseName = $typeId.attr('name').replace('[customisation_type_id]', '[product_customisation_values_attributes][0]')
/      $newRow = createCustomisationValueFor(parseInt(val), null, baseName).show()
/      $(this).prepend($newRow)
/
/    $('select.select2', $newRow).select2()
/    $('img', $newRow).remove()
/    $('input[name$="[_destroy]"]', $newRow).val('')
/
/  $('#product_customisation_types').delegate 'td.actions .edit', 'click', ->
/    $(this).closest('.product_customisation_type').find('.values').toggle()
/    false
