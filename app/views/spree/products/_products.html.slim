ruby:
  info = @searcher.selected_products_info
  collection_title = info[:title]
  if @searcher.colour.present?
    collection_title = "#{@searcher.colour.first.presentation} Dresses"
  elsif collection_title == "Range"
    collection_title = "Our Collection"
  end

.m-pixel
  == @marketing_pixels

.ad style=(info[:image].blank? ? '' : "background: url('#{info[:image]}') 0 0 no-repeat;")
  h1 class='black' = collection_title
  h2 = info[:description]
.results-sort.clearfix
  .results-sort-inner
    .results.fleft = pluralize(products.length, 'result')
    .sort.fright
      ' Sort by
      - options = options_from_collection_for_select(Products::ProductsFilter.available_sort_orders, :first, :second, params[:order])
      = select_tag "product_order", options, class: 'selectbox', :include_blank => true, :'data-placeholder' => 'Choose'
ul.products-list.grid-container
  - products.each do |product|
    li.product-item.grid-33
      .thumbnail
        .like = add_to_wishlist_link(product)
        - cache ['products_page', 'product', product.id, 'thumbnail_and_quick_view'], :expires_in => configatron.cache.expire.normally do
          .quick-view = quick_view_link(product)
          = link_to collection_product_path(product) do
            = hoverable_product_image_tag product, itemprop: "image", width: 243, height: 352, alt: product.name
      - cache ['products_page', 'product', product.id, 'main_info'], :expires_in => configatron.cache.expire.normally do
        .name = link_to product.name, product
        /.description = product_short_description(product)
        .price = price_for_product(product)
        .colors
          - colors[product.id].map(&:name).sort.each do |color|
            .color{class=color}

- if info[:seo_description]
  .category-description
    = info[:seo_description]

- if info[:footer_text]
  .description
    = info[:footer_text]
