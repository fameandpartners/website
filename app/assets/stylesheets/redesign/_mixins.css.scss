/////////// Linear Gradient ///////////

@mixin linear-gradient($pos, $G1, $G2: null,
                       $G3: null, $G4: null,
                       $G5: null, $G6: null,
                       $G7: null, $G8: null,
                       $G9: null, $G10: null,
                       $fallback: null) {
  // Detect what type of value exists in $pos
  $pos-type: type-of(nth($pos, 1));
  $pos-spec: null;
  $pos-degree: null;

  // If $pos is missing from mixin, reassign vars and add default position
  @if ($pos-type == color) or (nth($pos, 1) == "transparent") {
    $G10: $G9; $G9: $G8; $G8: $G7; $G7: $G6; $G6: $G5;
     $G5: $G4; $G4: $G3; $G3: $G2; $G2: $G1; $G1: $pos;
     $pos: null;
  }

  @if $pos {
    $positions: _linear-positions-parser($pos);
    $pos-degree: nth($positions, 1);
    $pos-spec: nth($positions, 2);
  }

  $full: $G1, $G2, $G3, $G4, $G5, $G6, $G7, $G8, $G9, $G10;

  // Set $G1 as the default fallback color
  $fallback-color: nth($G1, 1);

  // If $fallback is a color use that color as the fallback color
  @if (type-of($fallback) == color) or ($fallback == "transparent") {
    $fallback-color: $fallback;
  }

  background-color: $fallback-color;
  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome
  background-image: unquote("linear-gradient(#{$pos-spec}#{$full})");
}

//////// CSS3 Transitions ////////////

@mixin transition($transition) {
  -moz-transition:    $transition;
  -ms-transition:     $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}

@mixin transition-delay($delay) {
  -moz-transition-delay:    $delay;
  -o-transition-delay:      $delay;
  -webkit-transition-delay: $delay;
  transition-delay:         $delay;
}

@mixin transition-property($property) {
  -moz-transition-property:    $property;
  -o-transition-property:      $property;
  -webkit-transition-property: $property;
  transition-property:         $property;
}

@mixin transition-duration($duration) {
  -moz-transition-duration:    $duration;
  -o-transition-duration:      $duration;
  -webkit-transition-duration: $duration;
  transition-duration:         $duration;
}

@mixin keyframes($name) {
  @-moz-keyframes #{$name} {
    @content;
  }

  @-webkit-keyframes #{$name} {
    @content;
  }

  @-ms-keyframes #{$name} {
    @content;
  }

  @keyframes #{$name} {
    @content;
  }
}

//////// CSS3 Border Radius ////////////

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

//////// CSS3 Box Shadow ////////////

@mixin box-shadow($property) {
  -moz-box-shadow:    $property;
  -webkit-box-shadow: $property;
  box-shadow:         $property;
}

//////// CSS3 Box Filter ////////////

@mixin filter($filters) {
  -webkit-filter: $filters;
  filter:         $filters;
}

@mixin icon($image, $width: $icon-width, $height: $icon-height) {
  width: $width;
  height: $height;
  background: inline-image($image) no-repeat;
  -moz-background-size: 100% auto;
  -o-background-size: 100% auto;
  -webkit-background-size: 100% auto;
  background-size: 100% auto;
}

//////// CSS3 Flex Box ////////////

@mixin column-vertical-align($v-align: center) {

  @media (min-width: $bootstrap-md-width) {
    display: flex;

    .vertical-align {
      display: flex;
      align-items: $v-align;
    }

  }

}

@mixin display-flex($display: flex) {
  display: -webkit-#{$display};
  display: $display;
}

// Force Full width
@mixin real-full-width {
  flex: none;
  left: 0;
  width: 100vw;
  margin-left: calc(-50vw + 50% - 8px);
  padding: 0;
}
