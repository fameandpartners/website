/* [Filter / Sort]
-------------------------------------------------------*/

.FilterSort {

  .ExpandablePanel {

  }

}

.ExpandablePanel {

  input[type="checkbox"] {
    display: none;
  }

  a {
    color: $c-neutral-8;
    text-transform: uppercase;
    @extend .link-underline;
  }

  //Heading
  &__heading {
    margin-top: 30px;
    margin-bottom: 5px;
  }

  // Panel title
  &__mainTitle {
    font-family: $font-heading;
    font-size: 1.9em;
    font-weight: 300;
    display: inline-block;
  }

  // Reset all filters
  &__clearAll {
    float: right;
    font-size: 0.75em;
    top: 18px;
    position: relative;
  }

  // Container of each item / filter
  &__item {
    border-top: 1px solid $c-neutral-4;
    padding: 6px 0 8px;

    // When a filter is expanded...
    &--is-active .ExpandablePanel__name:before {
      @include transform(rotate(90deg));
      top: 4px;
      left: -4px;
    }

    // Filter is expanded => Show its options
    &--is-active .ExpandablePanel__listOptions {
      display: block;

      // Variation for a two-column layout
      &--twoColumns {
        display: flex;
        flex-wrap: wrap;

        // Fill half of the container
        label {
          flex: 1 0 50%;
          box-sizing: border-box;
          padding-right: 15px;
          @extend .txt-truncate-1;
        }

      }

    }

  }

  // Filter name
  &__name {
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.8em;
    display: inline-block;
    padding-left: 10px;
    cursor: pointer;

    // Display the arrow icon
    &:before {
      font-family: 'icomoon_fame_2015';
      font-size: 1rem;
      color: $c-neutral-6;
      content: "\e624";
      padding-right: 8px;
      display: inline-block;
      position: relative;
    }

  }

  // List of selected options
  &__selectedOptions {
    color: $c-neutral-8;
    float: right;
    max-width: 120px;
    @extend .txt-truncate-1;
  }

  // Each selected item
  &__selectedItem {
    font-size: 0.75em;

    // Separate each item by comma (except the very last one)
    &:not(:last-child):after {
      content: ", ";
    }

  }

  // List of available options
  &__listOptions {
    padding: 15px 0 15px 30px;
    display: none;

    // Color panels need a different left padding
    &--panelColors,
    &--panelColors .ExpandablePanel__moreOptions {
      padding-left: 15px;
    }

    // TODO: if this is needed elsewhere then it should become a global helper
    input[type="checkbox"]:checked {

      ~ .ExpandablePanel__optionCheck--tick {

        &::after {
          color: $c-neutral-white;
          font-family: 'icomoon_fame_2015';
          font-size: 0.6em;
          content: "\e90f";
          display: inline-block;
          position: relative;
          left: 3px;
          top: -5px;
        }

        // Black font-color for very light bg colors
        &.color-white::after {
          color: $c-neutral-black;
        }

      }

    }

  }

  // Option label
  &__option {
    padding: 1px 0;
    font-weight: 400;
    font-size: 0.95em;
    text-transform: capitalize;
    cursor: pointer;
  }


  // Custom checkbox
  &__optionCheck {

    // Rounded checkbox / radio
    &--rounded {
      border-radius: 100%;
      height: 15px;
      width: 15px;
      margin-right: 10px;
      display: inline-block;
      position: relative;
      top: 2px;
    }

  }

  // Fallback for colors with no background defined
  &__optionColorFallback {
    border-radius: 100%;
    background: $c-neutral-4;
    display: inline-block;
    position: relative;
    height: 15px;
    width: 15px;
    top: 2px;
    left: 15px;
  }


  // Option name
  &__optionName {

  }

  // Trigger to load more filter options
  &__moreOptions {
    font-size: 0.65em;
    margin-top: 15px;
  }

  // List of additional options
  &__moreOptionsList {
    display: none;

    &__is-active {
      display: block;
    }

  }

}
