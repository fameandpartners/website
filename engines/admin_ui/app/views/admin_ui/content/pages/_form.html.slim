.ibox.float-e-margins
  .ibox-title
    h5 Page Details

  .ibox-content

    .form-group
      label.col-sm-2.control-label Path
      .col-sm-10= f.text_field :path, :class => 'form-control', disabled: f.object.persisted?

    .form-group
      label.col-sm-2.control-label Template Path
      .col-sm-10= f.text_field :template_path, :class => 'form-control'

    .form-group
      label.col-sm-2.control-label Product Ordering
      .col-sm-10
        = f.select :product_order, options_for_select(Search::ColorVariantsQuery::ProductOrdering.new.all_as_collection, f.object.product_order), {include_blank: true},  :class => 'form-control'
        p
          ' Order products on the page using this criteria.
          br
          ' Note that <strong><tt>pids</tt></strong> will <strong>override</strong> any product ordering you specify, putting those products first.

    .form-group
      label.col-sm-2.control-label Variables
      .col-sm-10
        = react_component('PageVariablesComponent', f.object.variables)

        a.btn data-toggle="collapse" href="#page-variables-explanation"
          small
            i.fa.fa-chevron-down
            '  What variables can I use?
        .collapse#page-variables-explanation
          table.table.table-bordered
            thead
              tr
                th Name
                th Description
            tbody
              tr
                td : b lookbook
                td
                  p Enables the page to use its <i>template_path</i>.
                  p Possible values: <i>true</i>
              tr
                td : b pids
                td
                  p Product IDs and its colors separated by commas. Available on lookbook pages.
                  p Example: <i>"1019-watercolour-camo,1026-olive-shimmer,1011-peach"</i>
              tr
                td : b curated
                td
                  p Only displays products listed on the PIDs, otherwise, PID products will be shown first and newest products will fill in the rest of the page limit.
                  p Possible values: <i>true</i>
              tr
                td : b limit
                td
                  p If a page renders a product list, this will limit the number of products being displayed.
                  p Possible values: integers. Example: <i>20</i>
              tr
                td : b image_count
                td
                  p Quantity of banners to show on pages with the default lookbook template.
                  p Possible values: integers. Example: <i>5</i>
              tr
                td : b banner_image_url
                td
                  p Allow configuring the image URL for the lookbook pages.
                  p Example: <i>https://d1msb7dh8kb0o9.cloudfront.net/pages/mystyle/ruffle.jpg</i>
              tr
                td : b markdown
                td
                  p Allow using markdown within page's descriptions.
                  p Possible values: <i>true</i>

    .hr-line-dashed
    .form-group
      label.col-sm-2.control-label Publish From
      .col-sm-10= f.text_field :publish_from, :class => 'form-control datepicker'

      label.col-sm-2.control-label Publish To
      .col-sm-10= f.text_field :publish_to, :class => 'form-control datepicker'

= render partial: 'page_products'

.ibox.float-e-margins
  .ibox-title
    h5 SEO

  .ibox-content

    .hr-line-dashed
    .form-group
      label.col-sm-2.control-label Canonical
      .col-sm-10= f.text_field :canonical, :class => 'form-control'

    .hr-line-dashed
    .form-group
      label.col-sm-2.control-label Redirect
      .col-sm-10= f.text_field :redirect, :class => 'form-control'

    .hr-line-dashed
    .form-group
      label.col-sm-2.control-label nofollow
      .col-sm-10= f.check_box :nofollow

    .hr-line-dashed
    .form-group
      label.col-sm-2.control-label noindex
      .col-sm-10= f.check_box :noindex



.ibox.float-e-margins
  .ibox-title
    h5 Translations

  .ibox-content
    .tabs-container

      ul.nav.nav-tabs
        li.active
          a href="#tab-en-us" data-toggle="tab" aria-expanded="true" en-US
        li
          a href="#tab-en-au" data-toggle="tab" aria-expanded="false" en-AU
        li
          a href="#tab-new" data-toggle="tab" aria-expanded="false" +

      .tab-content
        #tab-en-us.tab-pane.active
          .panel-body
            - if page.translations.where(locale: "en-US").present?
              = f.fields_for :translations, page.translations.where(locale: "en-US").first do |t|
                = render :partial => 'translation_form', :locals => { :t => t }
            - else
              = f.fields_for :translations, Revolution::Translation.new  do |t|
                = render :partial => 'translation_form', :locals => { :t => t }
        #tab-en-au.tab-pane
          .panel-body
            - if page.translations.where(locale: "en-AU").present?
              = f.fields_for :translations, page.translations.where(locale: "en-AU").first do |t|
                = render :partial => 'translation_form', :locals => { :t => t }
            - else
              = f.fields_for :translations, Revolution::Translation.new  do |t|
                = render :partial => 'translation_form', :locals => { :t => t }
        #tab-new.tab-pane
          .panel-body
            | new translation


.ibox.float-e-margins
  .ibox-content
    .form-group
      .col-sm-4.col-sm-offset-2
        = f.submit 'Save', :class => 'btn btn-primary save'
        = link_to 'Cancel', content_pages_path, :class => 'btn btn-white'
