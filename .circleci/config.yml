version: 2
jobs:
  build:
    # TODO consider memcached
    docker:
      - image: circleci/ruby:2.3.3-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.6.6
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle-test_test
      - image: redis
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
    steps:
      - run: 
          name: Git LFS Install
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install -yqq git-lfs

      # - run: 
      #     name: Phantomjs Install
      #     command: |
      #       sudo curl --output /usr/local/bin/phantomjs https://s3.amazonaws.com/circle-downloads/phantomjs-2.1.1
      #       sudo chmod ugo+x /usr/local/bin/phantomjs

      - checkout

      - run:
          name: Git LFS pull
          command: |
            git lfs install
            git lfs pull

      - restore_cache:
          keys:
            - rails-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: rails-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - rails-yarn-{{ checksum "yarn.lock" }}
            - rails-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: rails-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: |
            echo 'test:
             adapter: postgresql
             database: circle-test_test
             username: root
             host: localhost
            ' > config/database.yml

            bundle exec rake db:create db:schema:load db:migrate --trace

      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb engines/*/spec/**/*_spec.rb spec/**/*.feature engines/*/spec/**/*.feature" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results
